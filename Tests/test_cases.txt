//noop
        mem[0] = 8'b00010011;
        mem[1] =8'b00000000;
        mem[2] = 8'b00000000;
        mem[3] = 8'b00000000;
        
        //lw x1, 100(x0)
        mem[4]<=8'h83;
        mem[5]<=8'h20;
        mem[6]<=8'h40;
        mem[7]<=8'h06;
        
        //lw x2, 104(x0)
        mem[8]<=8'h03;
        mem[9]<=8'h21;
        mem[10]<=8'h80;
        mem[11]<=8'h06;
        
        //lw x3, 108(x0)
        mem[12]<=8'h83;
        mem[13]<=8'h21;
        mem[14]<=8'hc0;
        mem[15]<=8'h06;
        
        //lui x5,8
        mem[16]<=8'hb7;
        mem[17]<=8'h82;
        mem[18]<=8'h00;
        mem[19]<=8'h00;
        
        //auipc x6,8
        mem[20]<=8'h17;
        mem[21]<=8'h83;
        mem[22]<=8'h00;
        mem[23]<=8'h00;
                
        //jal x7, here
        mem[24]<=8'hef;
        mem[25]<=8'h03;
        mem[26]<=8'h80;
        mem[27]<=8'h00;
                
        //add x3, x3, x3
        mem[28]<=8'hb3;
        mem[29]<=8'h81;
        mem[30]<=8'h31;
        mem[31]<=8'h00;
                
        //addi x8, x1, 47
        mem[32]<=8'h13;
        mem[33]<=8'h84;
        mem[34]<=8'hf0;
        mem[35]<=8'h02;
        
        //xori x9, x1, 8#check x9 = 2
        mem[36]<=8'h93;
        mem[37]<=8'hc4;
        mem[38]<=8'h80;
        mem[39]<=8'h00;
                
        //slt x10,x1,x2 #expec true (1)
        mem[40]<=8'h33;
        mem[41]<=8'ha5;
        mem[42]<=8'h20;
        mem[43]<=8'h00;
                
        //slti x10,x1,5# expect false(0)
        mem[44]<=8'h13;
        mem[45]<=8'ha5;
        mem[46]<=8'h50;
        mem[47]<=8'h00;
                
        //	beq x1,x1,label#taken
        mem[48]<=8'h63;
        mem[47]<=8'h84;
        mem[50]<=8'h10;
        mem[51]<=8'h00;
                
        //or x1,x1,x0#should be skipped, x1 unchanged
        mem[52]<=8'hb3;
        mem[53]<=8'he0;
        mem[54]<=8'h00;
        mem[55]<=8'h00;
                
        //label: slli x11,x1,2#x11=40
        mem[56]<=8'h93;
        mem[57]<=8'h95;
        mem[58]<=8'h20;
        mem[59]<=8'h00;
        //lw x12, 104(x0) x12 = 20
        mem[60]<=8'h03;
        mem[61]<=8'h26;
        mem[62]<=8'h80;
        mem[63]<=8'h06;
        
        //and x12, x12,x1  this should result in 0 in x12
        mem[64]<=8'h33;
        mem[65]<=8'h76;
        mem[66]<=8'h16;
        mem[67]<=8'h00;
        
        //ECALL
        mem[68]<=8'h73;
        mem[69]<=8'h00;
        mem[70]<=8'h00;
        mem[71]<=8'h00;
        
            
        //Data
        mem[100] <= 8'd10;
        mem[101] <= 8'd0;
        mem[102] <= 8'd0;
        mem[103] <= 8'd0;
    
        mem[104] <= 8'd20;
        mem[105] <= 8'd0;
        mem[106] <= 8'd0;
        mem[107] <= 8'd0;
    
        mem[108] <= 8'd30;
        mem[109] <= 8'd0;
        mem[110] <= 8'd0;
        mem[111] <= 8'd0;    